# {{ ansible_managed }}
# top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# Redirect HTTP to HTTPS
server {
    listen 80 default_server;
    #listen [::]:80 default_server;

    #server_name ${EXTERNAL_DOMAIN};
    server_tokens off;

    # Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
      return 301 https://$host$request_uri;
    }
}

# TLS config generated 2020-11-01, Mozilla Guideline v5.6, nginx 1.17.7, OpenSSL 1.1.1d, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1d&guideline=5.6
server {
    listen 443 ssl http2;
    #listen [::]:443 ssl http2;

    #server_name ${EXTERNAL_DOMAIN};
    server_tokens off;

    root /var/www/html;
    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/conf.d/htpasswd.users;
    index index.html index.htm;
    autoindex on;

    ssl_certificate ${TLS_NGINX_CRT_PATH};
    ssl_certificate_key ${TLS_NGINX_KEY_PATH};
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    ssl_dhparam /etc/nginx/conf.d/ssl-dhparams.pem;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    #ssl_stapling on;
    #ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate ${TLS_NGINX_CA_PATH};

    location / {
        proxy_pass https://redelk-kibana:5601;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        'upgrade';
        proxy_set_header Host              $host;
        proxy_ssl_verify off;
        proxy_cache_bypass $http_upgrade;
    }

    location /c2logs {
        try_files $uri $uri/ =404;
        autoindex on;
        location ~* \.(txt)$ {
            add_header Content-Type text/plain;
            add_header 'X-Content-Type-Options' 'nosniff';
        }
        location ~* \.(log)$ {
            add_header Content-Type text/plain;
            add_header 'X-Content-Type-Options' 'nosniff';
        }
        location ~* \.(jpg)$ {
            add_header Content-Type image/jpeg;
        }
    }

    {% if redelk_install_type == "full" %}
    location /neo4jbrowser {
        return 301 http://$host:7474;
        # auth_basic "Restricted Access";
        # auth_basic_user_file /etc/nginx/conf.d/htpasswd.users;
        # proxy_pass http://redelk-bloodhound:7474/browser;
    }

    location /jupyter {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/conf.d/htpasswd.users;

        proxy_pass http://redelk-jupyter:8888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # websocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade "websocket";
        proxy_set_header Connection "Upgrade";
        proxy_read_timeout 86400;
    }
    {% endif %}
}
